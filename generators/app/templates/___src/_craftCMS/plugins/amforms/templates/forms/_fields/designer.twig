{% set fieldLayout = form.getFieldLayout() %}
{% set instructions = 'Your form will contain the fields you set here.'|t %}

{% if customizableTabs is not defined %}{% set customizableTabs = true %}{% endif %}
{% if not customizableTabs and pretendTabName is not defined %}
    {% set pretendTabName = "Content"|t %}
{% endif %}

{% includeTranslations
    "Rename",
    "Delete",
    "Make required",
    "Make not required",
    "Remove",
    "Give your tab a name."
%}

{% includeCssFile "//fonts.googleapis.com/css?family=Coming+Soon" %}

{% macro tab(customizableTabs, tabName, tabFields) %}
    <div class="fld-tab">
        <div class="tabs">
            <div class="tab sel{% if customizableTabs %} draggable{% endif %}">
                <span>{{ tabName }}</span>
                {% if customizableTabs %}
                    <a class="settings icon" title="{{ 'Edit'|t }}"></a>
                {% endif %}
            </div>
        </div>
        <div class="fld-tabcontent">
            {% for field in tabFields %}
                <div class="fld-field{% if field.required %} fld-required{% endif %}" data-id="{{ field.fieldId }}">
                    <a class="settings icon" title="{{ 'Edit'|t }}"></a>
                    <span>{{ field.getField().name }}</span>
                    <input class="id-input" type="hidden" name="fieldLayout[{{ tabName|e('url') }}][]" value="{{ field.fieldId }}">
                    {% if field.required %}<input class="required-input" type="hidden" name="requiredFields[]" value="{{ field.fieldId }}">{% endif %}
                </div>
            {% endfor %}
        </div>
    </div>
{% endmacro %}



<div id="fieldlayoutform" class="fieldlayoutform">
    <div class="buttons secondary-buttons right">
        <div class="newwidget btngroup">
            <a class="btn submit add icon" href="{{ url('amforms/fields/new') }}" target="_blank">{{ 'New field'|t }}</a>
        </div>
    </div>

    <h2>{{ 'Design your form'|t }}</h2>

    {% if instructions is defined %}
        <div class="instructions">{{ instructions|md }}</div>
    {% endif %}

    <div class="fld-tabs">
        {% if fieldLayout %}
            {% import _self as macros %}

            {% if customizableTabs %}
                {% for tab in fieldLayout.getTabs() %}
                    {{ macros.tab(customizableTabs, tab.name, tab.getFields()) }}
                {% endfor %}
            {% else %}
                {{ macros.tab(customizableTabs, pretendTabName, fieldLayout.getFields()) }}
            {% endif %}
        {% endif %}
    </div>

    {% if customizableTabs %}
        <div class="newtabbtn-container">
            <div class="btn add icon">{{ "New Tab"|t }}</div>
        </div>
    {% endif %}

    <div class="unusedfields">
        {% for group in groups %}
            {% set totalUnselected = 0 %}
            {% for field in group.fields %}
                {% if not fieldLayout or field.id not in fieldLayout.getFieldIds() %}
                    {% set totalUnselected = totalUnselected + 1 %}
                {% endif %}
            {% endfor %}

            <div class="fld-tab unused{% if totalUnselected == 0 %} hidden{% endif %}">
                <div class="tabs">
                    <div class="tab sel"><span>{{ 'Fieldset {index}'|t({'index': loop.index}) }}</span></div>
                </div>
                <div class="fld-tabcontent">
                    {% for field in group.fields %}
                        {% set selected = fieldLayout and field.id in fieldLayout.getFieldIds() %}
                        <div class="fld-field unused{% if selected %} hidden{% endif %}" data-id="{{ field.id }}">
                            <span>{{ field.name }}</span>
                        </div>
                    {% endfor %}
                </div>
            </div>
        {% endfor %}
    </div>

</div>

{% includeTranslations
    'Edit field'
%}
{% includeJsResource 'amforms/js/FieldLayoutDesigner.js' %}
{% includejs %}
    var initFLD = function() {
        new Craft.AmFormsFieldLayoutDesigner('#{{ "fieldlayoutform"|namespaceInputId }}', {
            editCpUrl: '{{ url('amforms/fields/edit') }}',
            customizableTabs: {{ customizableTabs ? 'true' : 'false' }},
            fieldInputName: '{{ "fieldLayout[__TAB_NAME__][]"|namespaceInputName|e("js") }}',
            requiredFieldInputName: '{{ "requiredFields[]"|namespaceInputName|e("js") }}'
        });
    };

    {% if tab is defined %}

        var $fldTab = $('#{{ ("tab-"~tab)|namespaceInputId }}');

        if ($fldTab.hasClass('sel'))
        {
            initFLD();
        }
        else
        {
            $fldTab.on('activate.fld', function() {
                initFLD();
                $fldTab.off('activate.fld');
            });
        }

    {% else %}

        initFLD();

    {% endif %}
{% endincludejs %}
