{% extends 'amforms/_layouts/cp' %}

{% set fullPageForm = true %}

{% import '_includes/forms' as forms %}

{% set title = (fieldId is defined ? 'Edit field'|t : 'New field'|t) %}

{% set crumbs = [
    { label: craft.amForms.name, url: url('amforms') },
    { label: 'Fields'|t, url: url('amforms/fields') },
    { label: title, url: '#' }
] %}

{% if field is defined %}
    {% set fieldType = field.getFieldType() %}
    {% set isFieldTypeMissing = not fieldType %}
{% else %}
    {% set isFieldTypeMissing = false %}
{% endif %}

{% set fieldTypes = craft.fields.getAllFieldTypes() %}
{% set fieldTypeGroups = craft.amForms.getProperFieldTypes(fieldTypes) %}

{% if fieldType is not defined or isFieldTypeMissing %}
    {% set fieldType = craft.fields.getFieldType('PlainText') %}
{% endif %}

{% block content %}
    <input type="hidden" name="action" value="amForms/fields/saveField">
    <input type="hidden" name="redirect" value="amforms/fields">
    {% if fieldId is defined -%}<input type="hidden" name="fieldId" value="{{ fieldId }}">{% endif %}

    {{ forms.textField({
        label: "Name"|t,
        instructions: "What this field will be called in the CP."|t,
        id: 'name',
        name: 'name',
        value: (field is defined ? field.name : null),
        errors: (field is defined ? field.getErrors('name') : null),
        first: true,
        required: true,
        translatable: true,
        autofocus: true
    }) }}

    {{ forms.textField({
        label: "Handle"|t,
        instructions: "How youâ€™ll refer to this field in the templates."|t,
        id: 'handle',
        class: 'code',
        name: 'handle',
        maxlength: 64,
        value: (field is defined ? field.handle : null),
        errors: (field is defined ? field.getErrors('handle') : null),
        required: true,
    }) }}

    {{ forms.textareaField({
        label: "Instructions"|t,
        instructions: "Helper text to guide the author."|t,
        id: 'instructions',
        class: 'nicetext',
        name: 'instructions',
        value: (field is defined ? field.instructions : null),
        errors: (field is defined ? field.getErrors('instructions') : null),
        translatable: true
    }) }}

    {% if craft.isLocalized() %}
        {{ forms.checkboxField({
            label: "This field is translatable"|t,
            name: 'translatable',
            checked: (field is defined ? field.translatable : false)
        }) }}
    {% endif %}

    <hr>

    {{ forms.selectField({
        label: "Field Type"|t,
        instructions: "What type of field is this?"|t ~ (currentUser.admin ? ("<br>" ~ "<strong>Note: Basic fields are supported in the displayForm() tag.</strong>"|t) : ''),
        warning: (fieldId is defined ? "Changing this may result in data loss."|t),
        id: 'type',
        name: 'type',
        options: fieldTypeGroups,
        value: fieldType.getClassHandle(),
        toggle: true
    }) }}

    {% for _fieldType in fieldTypes %}
        {% set isCurrent = (_fieldType.getClassHandle() == fieldType.getClassHandle()) %}
        <div id="{{ _fieldType.getClassHandle() }}"{% if not isCurrent %} class="hidden"{% endif %}>
            {% namespace 'types['~_fieldType.getClassHandle()~']' %}
                {% if isCurrent %}
                    {{ fieldType.getSettingsHtml()|raw }}
                {% else %}
                    {{ _fieldType.getSettingsHtml()|raw }}
                {% endif %}
            {% endnamespace %}
        </div>
    {% endfor %}
{% endblock %}

{% if fieldId is not defined %}
    {% includeJs "new Craft.HandleGenerator('#name', '#handle');" %}
{% endif %}
