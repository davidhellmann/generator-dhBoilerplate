{"version":3,"sources":["webpack:///converter.js","webpack:///webpack/bootstrap 731126cc9fb8ecd18c8a","webpack:///./src/converter.js","webpack:///external \"jQuery\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_jquery","_jquery2","$fieldType","$fieldId","$matrixSettings","val","length","toggleState","state","enabled","$convert","toggleClass","$formButton","$form","off","on","e","preventDefault","perform","$spinner","removeClass","Craft","postActionRequest","fieldId","response","textStatus","success","cp","removeListener","Garnish","$win","window","location","reload","displayError","t","errors","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","error","value","err","prepend","$primaryForm","find","confirm","jQuery"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAE/B,YAMA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GEpDxF,GAAAG,GAAAf,EAAA,GFkDKgB,EAAWL,EAAuBI,GEhDjCE,GAAa,EAAAD,cAAE,SACfE,GAAW,EAAAF,cAAE,yBACbG,GAAkB,EAAAH,cAAE,UAEF,SAArBC,EAAWG,OAAmBF,EAASG,OAAS,IACnD,cAuBUC,GAAT,SAAqBC,GAEpBC,IAAYD,EAEZE,EAASC,YAAY,YAAaF,GAClCG,EAAYD,YAAY,YAAaF,GAElCA,EAEFI,EAAMC,IAAI,cAIVD,EAAME,GAAG,aAAc,SAAAC,GAAA,MAAKA,GAAEC,oBAIvBC,EAAT,WAECX,GAAY,GAEZY,EAASC,YAAY,UAErBC,MAAMC,kBAAkB,uBAAyBC,QAASpB,EAASE,OAAS,SAACmB,EAAUC,GAEtF,GAAGD,EAASE,QAGXL,MAAMM,GAAGC,eAAeC,QAAQC,KAAM,gBAEtCC,OAAOC,SAASC,aAQhB,IAJA1B,GAAY,GAEZc,MAAMM,GAAGO,aAAab,MAAMc,EAAE,0CAE3BX,EAASY,QAAUZ,EAASY,OAAO9B,OAAS,EAC/C,IAAA+B,IAAA,EAAAC,GAAA,EAAAC,EAAAC,MAAA,KACC,OAAAC,GAAAC,EAAiBlB,EAASY,OAA1BO,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EACA,IADQU,GACRN,EAAAO,KACC3B,OAAMM,GAAGO,aAAaa,IAHxB,MAAAE,GAAAX,GAAA,EAAAC,EAAAU,EAAA,aAAAZ,GAAAK,2BAAA,WAAAJ,EAAA,KAAAC,QA7DHnC,GAAgB8C,QAAhB,oFAIa7B,MAAMc,EAAE,oBAJrB,kDAKmCd,MAAMc,EAAE,uHAL3C,8IAQgFd,MAAMc,EAAE,WARxF,wHAWwBd,MAAMc,EAAE,iEAXhC,iCAgBA,IAAMzB,IAAW,EAAAT,cAAE,0BACbkB,GAAW,EAAAlB,cAAE,2BACbY,EAAQQ,MAAMM,GAAGwB,aACjBvC,EAAcC,EAAMuC,KAAK,wBAC3B3C,GAAU,CAmDdC,GAASK,GAAG,QAAS,SAAAC,GAEpBA,EAAEC,iBAECR,GAAW4C,QAAQhC,MAAMc,EAAE,+FAE7BjB,UFwDG,SAAS7B,EAAQD,GG7IvBC,EAAAD,QAAAkE","file":"converter.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _jquery = __webpack_require__(1);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar $fieldType = (0, _jquery2.default)('#type');\n\tvar $fieldId = (0, _jquery2.default)('input[name=\"fieldId\"]');\n\tvar $matrixSettings = (0, _jquery2.default)('#Matrix');\n\t\n\tif ($fieldType.val() === 'Neo' && $fieldId.length > 0) {\n\t\t(function () {\n\t\t\tvar toggleState = function toggleState(state) {\n\t\t\t\tenabled = !!state;\n\t\n\t\t\t\t$convert.toggleClass('disabled', !enabled);\n\t\t\t\t$formButton.toggleClass('disabled', !enabled);\n\t\n\t\t\t\tif (enabled) {\n\t\t\t\t\t$form.off('submit.neo');\n\t\t\t\t} else {\n\t\t\t\t\t$form.on('submit.neo', function (e) {\n\t\t\t\t\t\treturn e.preventDefault();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar perform = function perform() {\n\t\t\t\ttoggleState(false);\n\t\n\t\t\t\t$spinner.removeClass('hidden');\n\t\n\t\t\t\tCraft.postActionRequest('neo/convertToMatrix', { fieldId: $fieldId.val() }, function (response, textStatus) {\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\t// Prevent the \"Do you want to reload this site?\" prompt from showing\n\t\t\t\t\t\tCraft.cp.removeListener(Garnish.$win, 'beforeunload');\n\t\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoggleState(true);\n\t\n\t\t\t\t\t\tCraft.cp.displayError(Craft.t(\"Could not convert Neo field to Matrix\"));\n\t\n\t\t\t\t\t\tif (response.errors && response.errors.length > 0) {\n\t\t\t\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfor (var _iterator = response.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\t\t\t\tvar error = _step.value;\n\t\n\t\t\t\t\t\t\t\t\tCraft.cp.displayError(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\n\t\t\t$matrixSettings.prepend('\\n\\t\\t<hr>\\n\\t\\t<div class=\"field\">\\n\\t\\t\\t<div class=\"heading\">\\n\\t\\t\\t\\t<label>' + Craft.t(\"Convert from Neo\") + '</label>\\n\\t\\t\\t\\t<div class=\"instructions\"><p>' + Craft.t(\"This field is currently of the Neo type. You may automatically convert it to Matrix along with all of it's content.\") + '</p></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"input ltr\">\\n\\t\\t\\t\\t<input id=\"Matrix-convert_button\" type=\"button\" class=\"btn submit\" value=\"' + Craft.t(\"Convert\") + '\">\\n\\t\\t\\t\\t<span id=\"Matrix-convert_spinner\" class=\"spinner hidden\"></span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<p class=\"warning\">' + Craft.t(\"By converting to Matrix, structural information will be lost.\") + '</p>\\n\\t\\t</div>\\n\\t\\t<hr>\\n\\t');\n\t\n\t\t\tvar $convert = (0, _jquery2.default)('#Matrix-convert_button');\n\t\t\tvar $spinner = (0, _jquery2.default)('#Matrix-convert_spinner');\n\t\t\tvar $form = Craft.cp.$primaryForm;\n\t\t\tvar $formButton = $form.find('input[type=\"submit\"]');\n\t\t\tvar enabled = true;\n\t\n\t\t\t$convert.on('click', function (e) {\n\t\t\t\te.preventDefault();\n\t\n\t\t\t\tif (enabled && confirm(Craft.t(\"Are you sure? This is a one way operation. You cannot undo conversion from Neo to Matrix.\"))) {\n\t\t\t\t\tperform();\n\t\t\t\t}\n\t\t\t});\n\t\t})();\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** converter.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 731126cc9fb8ecd18c8a\n **/","import $ from 'jquery'\n\nconst $fieldType = $('#type')\nconst $fieldId = $('input[name=\"fieldId\"]')\nconst $matrixSettings = $('#Matrix')\n\nif($fieldType.val() === 'Neo' && $fieldId.length > 0)\n{\n\t$matrixSettings.prepend(`\n\t\t<hr>\n\t\t<div class=\"field\">\n\t\t\t<div class=\"heading\">\n\t\t\t\t<label>${ Craft.t(\"Convert from Neo\") }</label>\n\t\t\t\t<div class=\"instructions\"><p>${ Craft.t(\"This field is currently of the Neo type. You may automatically convert it to Matrix along with all of it's content.\") }</p></div>\n\t\t\t</div>\n\t\t\t<div class=\"input ltr\">\n\t\t\t\t<input id=\"Matrix-convert_button\" type=\"button\" class=\"btn submit\" value=\"${ Craft.t(\"Convert\") }\">\n\t\t\t\t<span id=\"Matrix-convert_spinner\" class=\"spinner hidden\"></span>\n\t\t\t</div>\n\t\t\t<p class=\"warning\">${ Craft.t(\"By converting to Matrix, structural information will be lost.\") }</p>\n\t\t</div>\n\t\t<hr>\n\t`)\n\n\tconst $convert = $('#Matrix-convert_button')\n\tconst $spinner = $('#Matrix-convert_spinner')\n\tconst $form = Craft.cp.$primaryForm\n\tconst $formButton = $form.find('input[type=\"submit\"]')\n\tlet enabled = true\n\n\tfunction toggleState(state)\n\t{\n\t\tenabled = !!state\n\n\t\t$convert.toggleClass('disabled', !enabled)\n\t\t$formButton.toggleClass('disabled', !enabled)\n\n\t\tif(enabled)\n\t\t{\n\t\t\t$form.off('submit.neo')\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$form.on('submit.neo', e => e.preventDefault())\n\t\t}\n\t}\n\n\tfunction perform()\n\t{\n\t\ttoggleState(false)\n\n\t\t$spinner.removeClass('hidden')\n\n\t\tCraft.postActionRequest('neo/convertToMatrix', { fieldId: $fieldId.val() }, (response, textStatus) =>\n\t\t{\n\t\t\tif(response.success)\n\t\t\t{\n\t\t\t\t// Prevent the \"Do you want to reload this site?\" prompt from showing\n\t\t\t\tCraft.cp.removeListener(Garnish.$win, 'beforeunload')\n\n\t\t\t\twindow.location.reload()\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttoggleState(true)\n\n\t\t\t\tCraft.cp.displayError(Craft.t(\"Could not convert Neo field to Matrix\"))\n\n\t\t\t\tif(response.errors && response.errors.length > 0)\n\t\t\t\t{\n\t\t\t\t\tfor(let error of response.errors)\n\t\t\t\t\t{\n\t\t\t\t\t\tCraft.cp.displayError(error)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\t$convert.on('click', e =>\n\t{\n\t\te.preventDefault()\n\n\t\tif(enabled && confirm(Craft.t(\"Are you sure? This is a one way operation. You cannot undo conversion from Neo to Matrix.\")))\n\t\t{\n\t\t\tperform()\n\t\t}\n\t})\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/converter.js\n **/","module.exports = jQuery;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jQuery\"\n ** module id = 1\n ** module chunks = 0 1\n **/"],"sourceRoot":""}